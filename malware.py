#!/usr/bin/python
import sys, os
import re
import syslog
import time

syslog.openlog(os.path.basename(sys.argv[0]), syslog.LOG_PID)
sinkhole = {};
sinkhole['ttl'] = 180;
sinkhole['dest'] = "7.6.6.6";
sinkhole['dns'] = "sinkhole.dtlan.net";
sinkhole['email'] = "abuse.dtlan.net";

#http://mirror1.malwaredomains.com/files/justdomains
domains = open( "/usr/local/sbin/justdomains", "r" )
malware = {}
for domain in domains:
    malware[domain.rstrip().lower()] = 0;
domains.close()

syslog.syslog("Loaded %d Domains" % len(malware));

def parse(fd, out):
    line = fd.readline().strip()
    if not line.startswith('HELO'):
        print >>out, 'FAIL'
        out.flush()
        sys.exit(1)
    else:
    	print >>out, 'OK\t%s ready' % (os.path.basename(sys.argv[0]),)
        out.flush()
    	syslog.syslog('received HELO from PowerDNS')

    while True:
        line = fd.readline().strip()
        if not line:
            break

    	#syslog.syslog('<<< %s' % (line,))

        request = line.split('\t')
        if len(request) < 6:
            print >>out, 'FAIL'
            out.flush()
            continue
        try:
		kind, qname, qclass, qtype, qid, ip = request
	except:
		kind, qname, qclass, qtype, qid, ip, their_ip = request
	
	qname = qname.lower()
	is_malware = False
		
	if qname.startswith('www.'):
			if qname.replace('www.','') in malware:
				is_malware = True
	elif qname in malware:
			is_malware = True
		
        if qtype in ['SOA', 'NS', 'ANY'] and is_malware: 
			print >>out, 'DATA\t%s\t%s\tSOA\t%d\t-1\t%s %s %s 10800 3600 604800 3600' % (qname, qclass, sinkhole['ttl'], sinkhole['dns'], sinkhole['email'], time.strftime('%Y%m%d%H')) 
        if qtype in ['A', 'ANY'] and is_malware:
        	print >>out, 'DATA\t%s\t%s\tA\t%d\t-1\t%s' % (qname, qclass, sinkhole['ttl'], sinkhole['dest'])
        	syslog.syslog('>>> \t%s\t%s\tA\t%d\t-1\t%s' % (qname, qclass, sinkhole['ttl'], sinkhole['dest']))
		      
        print >>out, 'END'
        out.flush()
    return 0

if __name__ == '__main__':
    import sys
    sys.exit(parse(sys.stdin, sys.stdout))